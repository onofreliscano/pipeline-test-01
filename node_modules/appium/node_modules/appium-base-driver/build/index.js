"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "DEFAULT_BASE_PATH", {
  enumerable: true,
  get: function () {
    return _constants.DEFAULT_BASE_PATH;
  }
});
Object.defineProperty(exports, "PROTOCOLS", {
  enumerable: true,
  get: function () {
    return _constants.PROTOCOLS;
  }
});
exports.DEFAULT_WS_PATHNAME_PREFIX = exports.validateCaps = exports.isStandardCap = exports.processCapabilities = exports.getSummaryByCode = exports.statusCodes = exports.JWProxy = exports.server = exports.STATIC_DIR = exports.normalizeBasePath = exports.isSessionCommand = exports.NO_SESSION_ID_COMMANDS = exports.routeToCommandName = exports.METHOD_MAP = exports.ALL_COMMANDS = exports.determineProtocol = exports.errorFromW3CJsonCode = exports.errorFromCode = exports.errorFromMJSONWPStatusCode = exports.isErrorType = exports.errors = exports.routeConfiguringFunction = exports.Protocol = exports.default = exports.BASEDRIVER_HANDLED_SETTINGS = exports.ImageElement = exports.DeviceSettings = exports.BaseDriver = void 0;

require("source-map-support/register");

var driver = _interopRequireWildcard(require("./lib/basedriver/driver"));

var image = _interopRequireWildcard(require("./lib/basedriver/image-element"));

var deviceSettings = _interopRequireWildcard(require("./lib/basedriver/device-settings"));

var protocol = _interopRequireWildcard(require("./lib/protocol"));

var _constants = require("./lib/constants");

var staticIndex = _interopRequireWildcard(require("./lib/express/static"));

var serverIndex = _interopRequireWildcard(require("./lib/express/server"));

var proxyIndex = _interopRequireWildcard(require("./lib/jsonwp-proxy/proxy"));

var statusIndex = _interopRequireWildcard(require("./lib/jsonwp-status/status"));

var caps = _interopRequireWildcard(require("./lib/basedriver/capabilities"));

var ws = _interopRequireWildcard(require("./lib/express/websocket"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const {
  BaseDriver
} = driver;
exports.BaseDriver = BaseDriver;
const {
  ImageElement
} = image;
exports.ImageElement = ImageElement;
const {
  DeviceSettings,
  BASEDRIVER_HANDLED_SETTINGS
} = deviceSettings;
exports.BASEDRIVER_HANDLED_SETTINGS = BASEDRIVER_HANDLED_SETTINGS;
exports.DeviceSettings = DeviceSettings;
var _default = BaseDriver;
exports.default = _default;
const {
  Protocol,
  routeConfiguringFunction,
  errors,
  isErrorType,
  errorFromMJSONWPStatusCode,
  errorFromW3CJsonCode,
  ALL_COMMANDS,
  METHOD_MAP,
  routeToCommandName,
  NO_SESSION_ID_COMMANDS,
  isSessionCommand,
  normalizeBasePath,
  determineProtocol
} = protocol;
exports.determineProtocol = determineProtocol;
exports.normalizeBasePath = normalizeBasePath;
exports.isSessionCommand = isSessionCommand;
exports.NO_SESSION_ID_COMMANDS = NO_SESSION_ID_COMMANDS;
exports.routeToCommandName = routeToCommandName;
exports.METHOD_MAP = METHOD_MAP;
exports.ALL_COMMANDS = ALL_COMMANDS;
exports.errorFromW3CJsonCode = errorFromW3CJsonCode;
exports.errorFromCode = exports.errorFromMJSONWPStatusCode = errorFromMJSONWPStatusCode;
exports.isErrorType = isErrorType;
exports.errors = errors;
exports.routeConfiguringFunction = routeConfiguringFunction;
exports.Protocol = Protocol;
const {
  STATIC_DIR
} = staticIndex;
exports.STATIC_DIR = STATIC_DIR;
const {
  server
} = serverIndex;
exports.server = server;
const {
  JWProxy
} = proxyIndex;
exports.JWProxy = JWProxy;
const {
  codes: statusCodes,
  getSummaryByCode
} = statusIndex;
exports.getSummaryByCode = getSummaryByCode;
exports.statusCodes = statusCodes;
const {
  processCapabilities,
  isStandardCap,
  validateCaps
} = caps;
exports.validateCaps = validateCaps;
exports.isStandardCap = isStandardCap;
exports.processCapabilities = processCapabilities;
const {
  DEFAULT_WS_PATHNAME_PREFIX
} = ws;
exports.DEFAULT_WS_PATHNAME_PREFIX = DEFAULT_WS_PATHNAME_PREFIX;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhc2VEcml2ZXIiLCJkcml2ZXIiLCJJbWFnZUVsZW1lbnQiLCJpbWFnZSIsIkRldmljZVNldHRpbmdzIiwiQkFTRURSSVZFUl9IQU5ETEVEX1NFVFRJTkdTIiwiZGV2aWNlU2V0dGluZ3MiLCJQcm90b2NvbCIsInJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiIsImVycm9ycyIsImlzRXJyb3JUeXBlIiwiZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUiLCJlcnJvckZyb21XM0NKc29uQ29kZSIsIkFMTF9DT01NQU5EUyIsIk1FVEhPRF9NQVAiLCJyb3V0ZVRvQ29tbWFuZE5hbWUiLCJOT19TRVNTSU9OX0lEX0NPTU1BTkRTIiwiaXNTZXNzaW9uQ29tbWFuZCIsIm5vcm1hbGl6ZUJhc2VQYXRoIiwiZGV0ZXJtaW5lUHJvdG9jb2wiLCJwcm90b2NvbCIsIlNUQVRJQ19ESVIiLCJzdGF0aWNJbmRleCIsInNlcnZlciIsInNlcnZlckluZGV4IiwiSldQcm94eSIsInByb3h5SW5kZXgiLCJjb2RlcyIsInN0YXR1c0NvZGVzIiwiZ2V0U3VtbWFyeUJ5Q29kZSIsInN0YXR1c0luZGV4IiwicHJvY2Vzc0NhcGFiaWxpdGllcyIsImlzU3RhbmRhcmRDYXAiLCJ2YWxpZGF0ZUNhcHMiLCJjYXBzIiwiREVGQVVMVF9XU19QQVRITkFNRV9QUkVGSVgiLCJ3cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBV0E7O0FBQ0E7O0FBb0JBOztBQUlBOztBQUtBOztBQUtBOztBQUtBOztBQUtBOzs7Ozs7QUF0REEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWlCQyxNQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBbUJDLEtBQXpCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsY0FBRjtBQUFrQkMsRUFBQUE7QUFBbEIsSUFBa0RDLGNBQXhEOzs7ZUFHZU4sVTs7QUFTZixNQUFNO0FBQ0pPLEVBQUFBLFFBREk7QUFDTUMsRUFBQUEsd0JBRE47QUFDZ0NDLEVBQUFBLE1BRGhDO0FBQ3dDQyxFQUFBQSxXQUR4QztBQUVKQyxFQUFBQSwwQkFGSTtBQUV3QkMsRUFBQUEsb0JBRnhCO0FBRThDQyxFQUFBQSxZQUY5QztBQUU0REMsRUFBQUEsVUFGNUQ7QUFHSkMsRUFBQUEsa0JBSEk7QUFHZ0JDLEVBQUFBLHNCQUhoQjtBQUd3Q0MsRUFBQUEsZ0JBSHhDO0FBSUpDLEVBQUFBLGlCQUpJO0FBSWVDLEVBQUFBO0FBSmYsSUFLRkMsUUFMSjs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWlCQyxXQUF2Qjs7QUFJQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBYUMsV0FBbkI7O0FBS0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWNDLFVBQXBCOztBQUtBLE1BQU07QUFBRUMsRUFBQUEsS0FBSyxFQUFFQyxXQUFUO0FBQXNCQyxFQUFBQTtBQUF0QixJQUEyQ0MsV0FBakQ7OztBQUtBLE1BQU07QUFBRUMsRUFBQUEsbUJBQUY7QUFBdUJDLEVBQUFBLGFBQXZCO0FBQXNDQyxFQUFBQTtBQUF0QyxJQUF1REMsSUFBN0Q7Ozs7QUFLQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBaUNDLEVBQXZDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1haW5cblxuLy8gQmFzZURyaXZlciBleHBvcnRzXG5pbXBvcnQgKiBhcyBkcml2ZXIgZnJvbSAnLi9saWIvYmFzZWRyaXZlci9kcml2ZXInO1xuaW1wb3J0ICogYXMgaW1hZ2UgZnJvbSAnLi9saWIvYmFzZWRyaXZlci9pbWFnZS1lbGVtZW50JztcbmltcG9ydCAqIGFzIGRldmljZVNldHRpbmdzIGZyb20gJy4vbGliL2Jhc2Vkcml2ZXIvZGV2aWNlLXNldHRpbmdzJztcblxuY29uc3QgeyBCYXNlRHJpdmVyIH0gPSBkcml2ZXI7XG5jb25zdCB7IEltYWdlRWxlbWVudCB9ID0gaW1hZ2U7XG5jb25zdCB7IERldmljZVNldHRpbmdzLCBCQVNFRFJJVkVSX0hBTkRMRURfU0VUVElOR1MgfSA9IGRldmljZVNldHRpbmdzO1xuXG5leHBvcnQgeyBCYXNlRHJpdmVyLCBEZXZpY2VTZXR0aW5ncywgSW1hZ2VFbGVtZW50LCBCQVNFRFJJVkVSX0hBTkRMRURfU0VUVElOR1MgfTtcbmV4cG9ydCBkZWZhdWx0IEJhc2VEcml2ZXI7XG5cblxuLy8gTUpTT05XUCBleHBvcnRzXG5pbXBvcnQgKiBhcyBwcm90b2NvbCBmcm9tICcuL2xpYi9wcm90b2NvbCc7XG5pbXBvcnQge1xuICBERUZBVUxUX0JBU0VfUEFUSCwgUFJPVE9DT0xTXG59IGZyb20gJy4vbGliL2NvbnN0YW50cyc7XG5cbmNvbnN0IHtcbiAgUHJvdG9jb2wsIHJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiwgZXJyb3JzLCBpc0Vycm9yVHlwZSxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUsIGVycm9yRnJvbVczQ0pzb25Db2RlLCBBTExfQ09NTUFORFMsIE1FVEhPRF9NQVAsXG4gIHJvdXRlVG9Db21tYW5kTmFtZSwgTk9fU0VTU0lPTl9JRF9DT01NQU5EUywgaXNTZXNzaW9uQ29tbWFuZCxcbiAgbm9ybWFsaXplQmFzZVBhdGgsIGRldGVybWluZVByb3RvY29sXG59ID0gcHJvdG9jb2w7XG5cbmV4cG9ydCB7XG4gIFByb3RvY29sLCByb3V0ZUNvbmZpZ3VyaW5nRnVuY3Rpb24sIGVycm9ycywgaXNFcnJvclR5cGUsIFBST1RPQ09MUyxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUsIGVycm9yRnJvbVczQ0pzb25Db2RlLCBkZXRlcm1pbmVQcm90b2NvbCxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUgYXMgZXJyb3JGcm9tQ29kZSwgQUxMX0NPTU1BTkRTLCBNRVRIT0RfTUFQLFxuICByb3V0ZVRvQ29tbWFuZE5hbWUsIE5PX1NFU1NJT05fSURfQ09NTUFORFMsIGlzU2Vzc2lvbkNvbW1hbmQsXG4gIERFRkFVTFRfQkFTRV9QQVRILCBub3JtYWxpemVCYXNlUGF0aFxufTtcblxuLy8gRXhwcmVzcyBleHBvcnRzXG5pbXBvcnQgKiBhcyBzdGF0aWNJbmRleCBmcm9tICcuL2xpYi9leHByZXNzL3N0YXRpYyc7XG5jb25zdCB7IFNUQVRJQ19ESVIgfSA9IHN0YXRpY0luZGV4O1xuZXhwb3J0IHsgU1RBVElDX0RJUiB9O1xuXG5pbXBvcnQgKiBhcyBzZXJ2ZXJJbmRleCBmcm9tICcuL2xpYi9leHByZXNzL3NlcnZlcic7XG5jb25zdCB7IHNlcnZlciB9ID0gc2VydmVySW5kZXg7XG5leHBvcnQgeyBzZXJ2ZXIgfTtcblxuLy8ganNvbndwLXByb3h5IGV4cG9ydHNcbmltcG9ydCAqIGFzIHByb3h5SW5kZXggZnJvbSAnLi9saWIvanNvbndwLXByb3h5L3Byb3h5JztcbmNvbnN0IHsgSldQcm94eSB9ID0gcHJveHlJbmRleDtcbmV4cG9ydCB7IEpXUHJveHkgfTtcblxuLy8ganNvbndwLXN0YXR1cyBleHBvcnRzXG5pbXBvcnQgKiBhcyBzdGF0dXNJbmRleCBmcm9tICcuL2xpYi9qc29ud3Atc3RhdHVzL3N0YXR1cyc7XG5jb25zdCB7IGNvZGVzOiBzdGF0dXNDb2RlcywgZ2V0U3VtbWFyeUJ5Q29kZSB9ID0gc3RhdHVzSW5kZXg7XG5leHBvcnQgeyBzdGF0dXNDb2RlcywgZ2V0U3VtbWFyeUJ5Q29kZSB9O1xuXG4vLyBXM0MgY2FwYWJpbGl0aWVzIHBhcnNlclxuaW1wb3J0ICogYXMgY2FwcyBmcm9tICcuL2xpYi9iYXNlZHJpdmVyL2NhcGFiaWxpdGllcyc7XG5jb25zdCB7IHByb2Nlc3NDYXBhYmlsaXRpZXMsIGlzU3RhbmRhcmRDYXAsIHZhbGlkYXRlQ2FwcyB9ID0gY2FwcztcbmV4cG9ydCB7IHByb2Nlc3NDYXBhYmlsaXRpZXMsIGlzU3RhbmRhcmRDYXAsIHZhbGlkYXRlQ2FwcyB9O1xuXG4vLyBXZWIgc29ja2V0IGhlbHBlcnNcbmltcG9ydCAqIGFzIHdzIGZyb20gJy4vbGliL2V4cHJlc3Mvd2Vic29ja2V0JztcbmNvbnN0IHsgREVGQVVMVF9XU19QQVRITkFNRV9QUkVGSVggfSA9IHdzO1xuZXhwb3J0IHsgREVGQVVMVF9XU19QQVRITkFNRV9QUkVGSVggfTtcbiJdLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4ifQ==
